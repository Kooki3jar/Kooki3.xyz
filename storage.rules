rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Common functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isValidSize() {
      return request.resource.size <= 5 * 1024 * 1024; // 5MB
    }

    // User profile images
    match /users/{userId}/profile/{imageId} {
      allow read: if true;
      allow write: if isOwner(userId) && isImage() && isValidSize();
    }

    // Product images
    match /products/{productId}/{imageId} {
      allow read: if true;
      allow create: if isAuthenticated() && isImage() && isValidSize();
      allow update, delete: if isAuthenticated() && 
        exists(/databases/$(database)/documents/products/$(productId)) &&
        get(/databases/$(database)/documents/products/$(productId)).data.createdBy == request.auth.uid;
    }
  }
}